1 + 1
View(r)
r
reticulate::py_install("jupyter")
Clique aqui!"
Clique aqui!"
library(ggplot2)
# Quantidade de elementos
n <- 550L
# Parâmetro de forma
alpha <- 2.5
# Parâmetro de escala
beta <- 1.5
# Fixando uma semente, de forma a sempre obtermos a mesma amostra
set.seed(0)
dados <-
data.frame(
x = seq(0, 2, length.out = n),
y_rand = rweibull(n, shape = alpha, scale = beta)
)
dados |>
ggplot() +
geom_histogram(aes(x = y_rand, y = ..density..), bins = 15) +
ggtitle(
label = "Histograma do conjunto de dados",
subtitle = "Na prática você só tem eles"
) +
labs(
y = "Densidade",
x = "x"
) +
scale_x_continuous(
limits = c(0, 2.7),
n.breaks = 15
) +
scale_y_continuous(
limits = c(0, 1.05),
n.breaks = 15
) +
geom_function(
fun = dweibull,
args = list(shape = alpha, scale = 1),
size = 0.8
) +
geom_function(
fun = dweibull,
args = list(shape = alpha, scale = 1.1),
color = "blue",
size = 0.8
) +
geom_function(
fun = dweibull,
args = list(shape = alpha, scale = 1.2),
color = "tomato",
size = 0.8
) +
geom_function(
fun = dweibull,
args = list(shape = alpha, scale = 1.3),
color = "red",
size = 0.8
) +
geom_function(
fun = dweibull,
args = list(shape = alpha, scale = beta),
color = "gold",
size = 0.8
)
JuliaCall::julia_setup()
JuliaCall::install_julia()
JuliaCall::julia_setup()
JuliaCall::julia_install_package("Distributions")
JuliaCall::julia_install_package("Optim")
JuliaCall::julia_install_package("QuadGK")
conda_install("r-reticulate", "scipy")
library(reticulate)
conda_install("r-reticulate", "scipy")
